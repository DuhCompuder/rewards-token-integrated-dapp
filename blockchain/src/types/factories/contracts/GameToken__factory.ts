/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GameToken, GameTokenInterface } from "../../contracts/GameToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimAward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toApprove",
        type: "address",
      },
    ],
    name: "giveApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toRemove",
        type: "address",
      },
    ],
    name: "removeApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f47616d65546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f474d544e0000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000412565b508060049081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b61208580620005096000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b85780638da5cb5b1161007c5780638da5cb5b1461033857806395d89b4114610356578063a457c2d714610374578063a9059cbb146103a4578063dd62ed3e146103d4578063f2fde38b1461040457610137565b806370a08231146102aa578063715018a6146102da57806379cc6790146102e45780637b9df28f146103005780637cab5e8c1461031c57610137565b8063313ce567116100ff578063313ce56714610208578063395093511461022657806340c10f191461025657806342966c68146102725780636af113041461028e57610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461018a5780631950c218146101a857806323b872dd146101d8575b600080fd5b610144610420565b6040516101519190611513565b60405180910390f35b610174600480360381019061016f91906115ce565b6104b2565b6040516101819190611629565b60405180910390f35b6101926104d5565b60405161019f9190611653565b60405180910390f35b6101c260048036038101906101bd919061166e565b6104df565b6040516101cf9190611629565b60405180910390f35b6101f260048036038101906101ed919061169b565b61053d565b6040516101ff9190611629565b60405180910390f35b61021061056c565b60405161021d919061170a565b60405180910390f35b610240600480360381019061023b91906115ce565b610575565b60405161024d9190611629565b60405180910390f35b610270600480360381019061026b91906115ce565b6105ac565b005b61028c60048036038101906102879190611725565b6105c2565b005b6102a860048036038101906102a391906115ce565b6105d6565b005b6102c460048036038101906102bf919061166e565b610677565b6040516102d19190611653565b60405180910390f35b6102e26106bf565b005b6102fe60048036038101906102f991906115ce565b6106d3565b005b61031a6004803603810190610315919061166e565b6106f3565b005b6103366004803603810190610331919061166e565b6107e9565b005b6103406108df565b60405161034d9190611761565b60405180910390f35b61035e610909565b60405161036b9190611513565b60405180910390f35b61038e600480360381019061038991906115ce565b61099b565b60405161039b9190611629565b60405180910390f35b6103be60048036038101906103b991906115ce565b610a12565b6040516103cb9190611629565b60405180910390f35b6103ee60048036038101906103e9919061177c565b610a35565b6040516103fb9190611653565b60405180910390f35b61041e6004803603810190610419919061166e565b610abc565b005b60606003805461042f906117eb565b80601f016020809104026020016040519081016040528092919081815260200182805461045b906117eb565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b5050505050905090565b6000806104bd610b3f565b90506104ca818585610b47565b600191505092915050565b6000600254905090565b60006104e9610d10565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080610548610b3f565b9050610555858285610d8e565b610560858585610e1a565b60019150509392505050565b60006012905090565b600080610580610b3f565b90506105a18185856105928589610a35565b61059c919061184b565b610b47565b600191505092915050565b6105b4610d10565b6105be8282611090565b5050565b6105d36105cd610b3f565b826111e6565b50565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610669576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610660906118f1565b60405180910390fd5b6106738282611090565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106c7610d10565b6106d160006113b3565b565b6106e5826106df610b3f565b83610d8e565b6106ef82826111e6565b5050565b6106fb610d10565b60011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615150361078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107859061195d565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6107f1610d10565b60011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b906119c9565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610918906117eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610944906117eb565b80156109915780601f1061096657610100808354040283529160200191610991565b820191906000526020600020905b81548152906001019060200180831161097457829003601f168201915b5050505050905090565b6000806109a6610b3f565b905060006109b48286610a35565b9050838110156109f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f090611a5b565b60405180910390fd5b610a068286868403610b47565b60019250505092915050565b600080610a1d610b3f565b9050610a2a818585610e1a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610ac4610d10565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2a90611aed565b60405180910390fd5b610b3c816113b3565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad90611b7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c90611c11565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610d039190611653565b60405180910390a3505050565b610d18610b3f565b73ffffffffffffffffffffffffffffffffffffffff16610d366108df565b73ffffffffffffffffffffffffffffffffffffffff1614610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611c7d565b60405180910390fd5b565b6000610d9a8484610a35565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e145781811015610e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd90611ce9565b60405180910390fd5b610e138484848403610b47565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8090611d7b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eef90611e0d565b60405180910390fd5b610f03838383611479565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090611e9f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110779190611653565b60405180910390a361108a84848461147e565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f690611f0b565b60405180910390fd5b61110b60008383611479565b806002600082825461111d919061184b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111ce9190611653565b60405180910390a36111e26000838361147e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124c90611f9d565b60405180910390fd5b61126182600083611479565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112de9061202f565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139a9190611653565b60405180910390a36113ae8360008461147e565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114bd5780820151818401526020810190506114a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006114e582611483565b6114ef818561148e565b93506114ff81856020860161149f565b611508816114c9565b840191505092915050565b6000602082019050818103600083015261152d81846114da565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115658261153a565b9050919050565b6115758161155a565b811461158057600080fd5b50565b6000813590506115928161156c565b92915050565b6000819050919050565b6115ab81611598565b81146115b657600080fd5b50565b6000813590506115c8816115a2565b92915050565b600080604083850312156115e5576115e4611535565b5b60006115f385828601611583565b9250506020611604858286016115b9565b9150509250929050565b60008115159050919050565b6116238161160e565b82525050565b600060208201905061163e600083018461161a565b92915050565b61164d81611598565b82525050565b60006020820190506116686000830184611644565b92915050565b60006020828403121561168457611683611535565b5b600061169284828501611583565b91505092915050565b6000806000606084860312156116b4576116b3611535565b5b60006116c286828701611583565b93505060206116d386828701611583565b92505060406116e4868287016115b9565b9150509250925092565b600060ff82169050919050565b611704816116ee565b82525050565b600060208201905061171f60008301846116fb565b92915050565b60006020828403121561173b5761173a611535565b5b6000611749848285016115b9565b91505092915050565b61175b8161155a565b82525050565b60006020820190506117766000830184611752565b92915050565b6000806040838503121561179357611792611535565b5b60006117a185828601611583565b92505060206117b285828601611583565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061180357607f821691505b602082108103611816576118156117bc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185682611598565b915061186183611598565b92508282019050808211156118795761187861181c565b5b92915050565b7f4163636573736f72206973206e6f74206f6e20617070726f766564207768697460008201527f656c697374000000000000000000000000000000000000000000000000000000602082015250565b60006118db60258361148e565b91506118e68261187f565b604082019050919050565b6000602082019050818103600083015261190a816118ce565b9050919050565b7f416c726561647920617070726f76656400000000000000000000000000000000600082015250565b600061194760108361148e565b915061195282611911565b602082019050919050565b600060208201905081810360008301526119768161193a565b9050919050565b7f43616e6e6f742072656d6f766520756e617070726f7665640000000000000000600082015250565b60006119b360188361148e565b91506119be8261197d565b602082019050919050565b600060208201905081810360008301526119e2816119a6565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611a4560258361148e565b9150611a50826119e9565b604082019050919050565b60006020820190508181036000830152611a7481611a38565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ad760268361148e565b9150611ae282611a7b565b604082019050919050565b60006020820190508181036000830152611b0681611aca565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b6960248361148e565b9150611b7482611b0d565b604082019050919050565b60006020820190508181036000830152611b9881611b5c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bfb60228361148e565b9150611c0682611b9f565b604082019050919050565b60006020820190508181036000830152611c2a81611bee565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c6760208361148e565b9150611c7282611c31565b602082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611cd3601d8361148e565b9150611cde82611c9d565b602082019050919050565b60006020820190508181036000830152611d0281611cc6565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611d6560258361148e565b9150611d7082611d09565b604082019050919050565b60006020820190508181036000830152611d9481611d58565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611df760238361148e565b9150611e0282611d9b565b604082019050919050565b60006020820190508181036000830152611e2681611dea565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611e8960268361148e565b9150611e9482611e2d565b604082019050919050565b60006020820190508181036000830152611eb881611e7c565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611ef5601f8361148e565b9150611f0082611ebf565b602082019050919050565b60006020820190508181036000830152611f2481611ee8565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f8760218361148e565b9150611f9282611f2b565b604082019050919050565b60006020820190508181036000830152611fb681611f7a565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061201960228361148e565b915061202482611fbd565b604082019050919050565b600060208201905081810360008301526120488161200c565b905091905056fea2646970667358221220613659f271494ad427139cd6eb96ad2cd8f1d5f7289bbd8e5196968f963d93dc64736f6c63430008110033";

type GameTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameToken__factory extends ContractFactory {
  constructor(...args: GameTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GameToken> {
    return super.deploy(overrides || {}) as Promise<GameToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GameToken {
    return super.attach(address) as GameToken;
  }
  override connect(signer: Signer): GameToken__factory {
    return super.connect(signer) as GameToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameTokenInterface {
    return new utils.Interface(_abi) as GameTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameToken {
    return new Contract(address, _abi, signerOrProvider) as GameToken;
  }
}

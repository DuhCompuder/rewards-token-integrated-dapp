/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RockPaperScissors,
  RockPaperScissorsInterface,
} from "../../../contracts/RPSGame.sol/RockPaperScissors";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGameToken",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    name: "AnnounceResult",
    type: "event",
  },
  {
    inputs: [],
    name: "claimWins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gamesPlayed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RockPaperScissors.Options",
        name: "selected",
        type: "uint8",
      },
    ],
    name: "playWithAPlayer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RockPaperScissors.Options",
        name: "selected",
        type: "uint8",
      },
    ],
    name: "playWithComputer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ae838038062001ae8833981810160405281019062000037919062000104565b6000600181905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000136565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b8826200008b565b9050919050565b6000620000cc82620000ab565b9050919050565b620000de81620000bf565b8114620000ea57600080fd5b50565b600081519050620000fe81620000d3565b92915050565b6000602082840312156200011d576200011c62000086565b5b60006200012d84828501620000ed565b91505092915050565b6119a280620001466000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806346c86a22146100675780636c39b7ee14610097578063740db6b8146100b55780638b31fb89146100bf578063b47f1de9146100ef578063d447e9bc1461011f575b600080fd5b610081600480360381019061007c919061100a565b61014f565b60405161008e91906110c7565b60405180910390f35b61009f6104e6565b6040516100ac9190611102565b60405180910390f35b6100bd6104ec565b005b6100d960048036038101906100d4919061117b565b61070f565b6040516100e69190611102565b60405180910390f35b6101096004803603810190610104919061100a565b610727565b60405161011691906110c7565b60405180910390f35b6101396004803603810190610134919061117b565b6108f0565b6040516101469190611102565b60405180910390f35b6060600073ffffffffffffffffffffffffffffffffffffffff1660026000600154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610259573360026000600154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160026000600154815260200190815260200160002060000160146101000a81548160ff0219169083600281111561024f5761024e6111a8565b5b02179055506104e1565b3373ffffffffffffffffffffffffffffffffffffffff1660026000600154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f69061126f565b60405180910390fd5b3360026000600154815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160026000600154815260200190815260200160002060010160146101000a81548160ff02191690836002811115610391576103906111a8565b5b02179055506104e06002600060015481526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166002811115610434576104336111a8565b5b6002811115610446576104456111a8565b5b81526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660028111156104c5576104c46111a8565b5b60028111156104d7576104d66111a8565b5b81525050610908565b5b919050565b60015481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061057657600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461060291906112be565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065391906112f2565b9250508190555060006103e88261066a9190611326565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a99b4f033836040518363ffffffff1660e01b81526004016106c7929190611377565b6020604051808303816000875af11580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a91906113d8565b505050565b60036020528060005260406000206000915090505481565b606060006107356002610e5f565b9050600061074282610ea1565b90506000309050600060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001846002811115610785576107846111a8565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018760028111156107b9576107b86111a8565b5b81525090506107c781610908565b8060026000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600281111561084f5761084e6111a8565b5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160146101000a81548160ff021916908360028111156108c6576108c56111a8565b5b021790555090505060018060008282546108e091906112f2565b9250508190555050505050919050565b60046020528060005260406000206000915090505481565b8060600151600281111561091f5761091e6111a8565b5b81602001516002811115610936576109356111a8565b5b036109a6577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c60015461096c8360200151610ece565b60405160200161097c919061148d565b6040516020818303038152906040526040516109999291906114c2565b60405180910390a1610e5c565b600060028111156109ba576109b96111a8565b5b816020015160028111156109d1576109d06111a8565b5b03610b38576002808111156109e9576109e86111a8565b5b81606001516002811115610a00576109ff6111a8565b5b03610a9e577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610a369190611564565b60405180910390a1600160036000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a9291906112f2565b92505081905550610b33565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610acf91906115de565b60405180910390a1600160036000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2b91906112f2565b925050819055505b610e5b565b60016002811115610b4c57610b4b6111a8565b5b81602001516002811115610b6357610b626111a8565b5b03610ccb5760006002811115610b7c57610b7b6111a8565b5b81606001516002811115610b9357610b926111a8565b5b03610c31577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610bc99190611658565b60405180910390a1600160036000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c2591906112f2565b92505081905550610cc6565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610c6291906116f8565b60405180910390a1600160036000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cbe91906112f2565b925050819055505b610e5a565b600280811115610cde57610cdd6111a8565b5b81602001516002811115610cf557610cf46111a8565b5b03610e595760016002811115610d0e57610d0d6111a8565b5b81606001516002811115610d2557610d246111a8565b5b03610dc3577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610d5b9190611798565b60405180910390a1600160036000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db791906112f2565b92505081905550610e58565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610df49190611838565b60405180910390a1600160036000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e5091906112f2565b925050819055505b5b5b5b5b50565b600081424433604051602001610e77939291906118cf565b6040516020818303038152906040528051906020012060001c610e9a919061193b565b9050919050565b6000808203610eb35760009050610ec9565b60018203610ec45760019050610ec9565b600290505b919050565b606060006002811115610ee457610ee36111a8565b5b826002811115610ef757610ef66111a8565b5b03610f39576040518060400160405280600481526020017f526f636b000000000000000000000000000000000000000000000000000000008152509050610fdb565b60016002811115610f4d57610f4c6111a8565b5b826002811115610f6057610f5f6111a8565b5b03610fa2576040518060400160405280600581526020017f50617065720000000000000000000000000000000000000000000000000000008152509050610fdb565b6040518060400160405280600881526020017f53636973736f727300000000000000000000000000000000000000000000000081525090505b919050565b600080fd5b60038110610ff257600080fd5b50565b60008135905061100481610fe5565b92915050565b6000602082840312156110205761101f610fe0565b5b600061102e84828501610ff5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611071578082015181840152602081019050611056565b60008484015250505050565b6000601f19601f8301169050919050565b600061109982611037565b6110a38185611042565b93506110b3818560208601611053565b6110bc8161107d565b840191505092915050565b600060208201905081810360008301526110e1818461108e565b905092915050565b6000819050919050565b6110fc816110e9565b82525050565b600060208201905061111760008301846110f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111488261111d565b9050919050565b6111588161113d565b811461116357600080fd5b50565b6000813590506111758161114f565b92915050565b60006020828403121561119157611190610fe0565b5b600061119f84828501611166565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f506c61796572422063616e6e6f74206265207468652073616d6520706c61796560008201527f7220617320706c61796572412c20706c656173652073656c656374206f70746960208201527f6f6e2077697468206120646966666572656e74206163636f756e742e00000000604082015250565b6000611259605c83611042565b9150611264826111d7565b606082019050919050565b600060208201905081810360008301526112888161124c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112c9826110e9565b91506112d4836110e9565b92508282039050818111156112ec576112eb61128f565b5b92915050565b60006112fd826110e9565b9150611308836110e9565b92508282019050808211156113205761131f61128f565b5b92915050565b6000611331826110e9565b915061133c836110e9565b925082820261134a816110e9565b915082820484148315176113615761136061128f565b5b5092915050565b6113718161113d565b82525050565b600060408201905061138c6000830185611368565b61139960208301846110f3565b9392505050565b60008115159050919050565b6113b5816113a0565b81146113c057600080fd5b50565b6000815190506113d2816113ac565b92915050565b6000602082840312156113ee576113ed610fe0565b5b60006113fc848285016113c3565b91505092915050565b7f426f746820706c61796572732073656c65637465643a20000000000000000000815250565b600081905092915050565b600061144182611037565b61144b818561142b565b935061145b818560208601611053565b80840191505092915050565b7f2e20497427732061207469652100000000000000000000000000000000000000815250565b600061149882611405565b6017820191506114a88284611436565b91506114b382611467565b600d8201915081905092915050565b60006040820190506114d760008301856110f3565b81810360208301526114e9818461108e565b90509392505050565b7f526f636b20736d61736865732073636973736f72732120506c6179657241207760008201527f696e210000000000000000000000000000000000000000000000000000000000602082015250565b600061154e602383611042565b9150611559826114f2565b604082019050919050565b600060408201905061157960008301846110f3565b818103602083015261158a81611541565b905092915050565b7f506170657220636f7665727320726f636b2120506c61796572422077696e732e600082015250565b60006115c8602083611042565b91506115d382611592565b602082019050919050565b60006040820190506115f360008301846110f3565b8181036020830152611604816115bb565b905092915050565b7f506170657220636f7665727320726f636b2120506c61796572412077696e2100600082015250565b6000611642601f83611042565b915061164d8261160c565b602082019050919050565b600060408201905061166d60008301846110f3565b818103602083015261167e81611635565b905092915050565b7f53636973736f727320637574732070617065722120506c61796572422077696e60008201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b60006116e2602283611042565b91506116ed82611686565b604082019050919050565b600060408201905061170d60008301846110f3565b818103602083015261171e816116d5565b905092915050565b7f53636973736f727320637574732070617065722120506c61796572412077696e60008201527f7321000000000000000000000000000000000000000000000000000000000000602082015250565b6000611782602283611042565b915061178d82611726565b604082019050919050565b60006040820190506117ad60008301846110f3565b81810360208301526117be81611775565b905092915050565b7f526f636b20736d61736865732073636973736f72732120506c6179657242207760008201527f696e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000611822602483611042565b915061182d826117c6565b604082019050919050565b600060408201905061184d60008301846110f3565b818103602083015261185e81611815565b905092915050565b6000819050919050565b61188161187c826110e9565b611866565b82525050565b60008160601b9050919050565b600061189f82611887565b9050919050565b60006118b182611894565b9050919050565b6118c96118c48261113d565b6118a6565b82525050565b60006118db8286611870565b6020820191506118eb8285611870565b6020820191506118fb82846118b8565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611946826110e9565b9150611951836110e9565b9250826119615761196061190c565b5b82820690509291505056fea26469706673582212203b315bb2670648b2ebda789c2cef6322bd184297ecb677876a7e202ea73d685c64736f6c63430008110033";

type RockPaperScissorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RockPaperScissorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RockPaperScissors__factory extends ContractFactory {
  constructor(...args: RockPaperScissorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RockPaperScissors> {
    return super.deploy(token, overrides || {}) as Promise<RockPaperScissors>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): RockPaperScissors {
    return super.attach(address) as RockPaperScissors;
  }
  override connect(signer: Signer): RockPaperScissors__factory {
    return super.connect(signer) as RockPaperScissors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RockPaperScissorsInterface {
    return new utils.Interface(_abi) as RockPaperScissorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RockPaperScissors {
    return new Contract(address, _abi, signerOrProvider) as RockPaperScissors;
  }
}

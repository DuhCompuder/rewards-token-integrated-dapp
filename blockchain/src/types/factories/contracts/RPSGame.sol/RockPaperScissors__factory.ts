/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RockPaperScissors,
  RockPaperScissorsInterface,
} from "../../../contracts/RPSGame.sol/RockPaperScissors";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGameToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    name: "AnnounceResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "player",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RockPaperScissors.Options",
        name: "playerSelection",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "playerSelectionReadable",
        type: "string",
      },
    ],
    name: "PlayerSelection",
    type: "event",
  },
  {
    inputs: [],
    name: "claimWins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gamesPlayed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RockPaperScissors.Options",
        name: "selected",
        type: "uint8",
      },
    ],
    name: "playWithAPlayer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RockPaperScissors.Options",
        name: "selected",
        type: "uint8",
      },
    ],
    name: "playWithComputer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IGameToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280601b81526020017f47616d65204f6620526f636b2050617065722053636973736f72730000000000815250600290816200004a919062000347565b503480156200005857600080fd5b506040516200222d3803806200222d83398181016040528101906200007e9190620004ac565b6000600181905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004de565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014f57607f821691505b60208210810362000165576200016462000107565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000190565b620001db868362000190565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000228620002226200021c84620001f3565b620001fd565b620001f3565b9050919050565b6000819050919050565b620002448362000207565b6200025c62000253826200022f565b8484546200019d565b825550505050565b600090565b6200027362000264565b6200028081848462000239565b505050565b5b81811015620002a8576200029c60008262000269565b60018101905062000286565b5050565b601f821115620002f757620002c1816200016b565b620002cc8462000180565b81016020851015620002dc578190505b620002f4620002eb8562000180565b83018262000285565b50505b505050565b600082821c905092915050565b60006200031c60001984600802620002fc565b1980831691505092915050565b600062000337838362000309565b9150826002028217905092915050565b6200035282620000cd565b67ffffffffffffffff8111156200036e576200036d620000d8565b5b6200037a825462000136565b62000387828285620002ac565b600060209050601f831160018114620003bf5760008415620003aa578287015190505b620003b6858262000329565b86555062000426565b601f198416620003cf866200016b565b60005b82811015620003f957848901518255600182019150602085019450602081019050620003d2565b8683101562000419578489015162000415601f89168262000309565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004608262000433565b9050919050565b6000620004748262000453565b9050919050565b620004868162000467565b81146200049257600080fd5b50565b600081519050620004a6816200047b565b92915050565b600060208284031215620004c557620004c46200042e565b5b6000620004d58482850162000495565b91505092915050565b611d3f80620004ee6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638b31fb891161005b5780638b31fb8914610103578063b47f1de914610133578063d447e9bc14610163578063fc0c546a1461019357610088565b806306fdde031461008d57806346c86a22146100ab5780636c39b7ee146100db578063740db6b8146100f9575b600080fd5b6100956101b1565b6040516100a291906111fa565b60405180910390f35b6100c560048036038101906100c09190611246565b61023f565b6040516100d291906111fa565b60405180910390f35b6100e3610664565b6040516100f0919061128c565b60405180910390f35b61010161066a565b005b61011d60048036038101906101189190611305565b61087b565b60405161012a919061128c565b60405180910390f35b61014d60048036038101906101489190611246565b610893565b60405161015a91906111fa565b60405180910390f35b61017d60048036038101906101789190611305565b610a56565b60405161018a919061128c565b60405180910390f35b61019b610a6e565b6040516101a89190611391565b60405180910390f35b600280546101be906113db565b80601f01602080910402602001604051908101604052809291908181526020018280546101ea906113db565b80156102375780601f1061020c57610100808354040283529160200191610237565b820191906000526020600020905b81548152906001019060200180831161021a57829003601f168201915b505050505081565b6060600073ffffffffffffffffffffffffffffffffffffffff1660036000600154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610390573360036000600154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160036000600154815260200190815260200160002060000160146101000a81548160ff0219169083600281111561033f5761033e61140c565b5b02179055507f0bd8031d8198abf312f83ab34e767987c4723803342bb0812b568871ac62c686600154338461037386610a92565b60405161038394939291906114de565b60405180910390a161065f565b3373ffffffffffffffffffffffffffffffffffffffff1660036000600154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d906115d5565b60405180910390fd5b3360036000600154815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160036000600154815260200190815260200160002060010160146101000a81548160ff021916908360028111156104c8576104c761140c565b5b02179055507f0bd8031d8198abf312f83ab34e767987c4723803342bb0812b568871ac62c68660015433846104fc86610a92565b60405161050c9493929190611641565b60405180910390a161065e6003600060015481526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660028111156105b2576105b161140c565b5b60028111156105c4576105c361140c565b5b81526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660028111156106435761064261140c565b5b60028111156106555761065461140c565b5b81525050610ba4565b5b919050565b60015481565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106106f457600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461078091906116cf565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d19190611703565b9250508190555060006103e8826107e89190611737565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a99b4f033836040518363ffffffff1660e01b8152600401610845929190611779565b600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050505050565b60046020528060005260406000206000915090505481565b606060006108a160026110fb565b905060006108ae8261113d565b9050600060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020018360028111156108ec576108eb61140c565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018660028111156109205761091f61140c565b5b815250905061092e81610ba4565b8060036000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360028111156109b6576109b561140c565b5b021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160146101000a81548160ff02191690836002811115610a2d57610a2c61140c565b5b02179055509050506001806000828254610a479190611703565b92505081905550505050919050565b60056020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006002811115610aa857610aa761140c565b5b826002811115610abb57610aba61140c565b5b03610afd576040518060400160405280600481526020017f526f636b000000000000000000000000000000000000000000000000000000008152509050610b9f565b60016002811115610b1157610b1061140c565b5b826002811115610b2457610b2361140c565b5b03610b66576040518060400160405280600581526020017f50617065720000000000000000000000000000000000000000000000000000008152509050610b9f565b6040518060400160405280600881526020017f53636973736f727300000000000000000000000000000000000000000000000081525090505b919050565b80606001516002811115610bbb57610bba61140c565b5b81602001516002811115610bd257610bd161140c565b5b03610c42577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154610c088360200151610a92565b604051602001610c18919061182a565b604051602081830303815290604052604051610c3592919061185f565b60405180910390a16110f8565b60006002811115610c5657610c5561140c565b5b81602001516002811115610c6d57610c6c61140c565b5b03610dd457600280811115610c8557610c8461140c565b5b81606001516002811115610c9c57610c9b61140c565b5b03610d3a577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610cd29190611901565b60405180910390a1600160046000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2e9190611703565b92505081905550610dcf565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610d6b919061197b565b60405180910390a1600160046000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dc79190611703565b925050819055505b6110f7565b60016002811115610de857610de761140c565b5b81602001516002811115610dff57610dfe61140c565b5b03610f675760006002811115610e1857610e1761140c565b5b81606001516002811115610e2f57610e2e61140c565b5b03610ecd577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610e6591906119f5565b60405180910390a1600160046000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec19190611703565b92505081905550610f62565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610efe9190611a95565b60405180910390a1600160046000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5a9190611703565b925050819055505b6110f6565b600280811115610f7a57610f7961140c565b5b81602001516002811115610f9157610f9061140c565b5b036110f55760016002811115610faa57610fa961140c565b5b81606001516002811115610fc157610fc061140c565b5b0361105f577faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c600154604051610ff79190611b35565b60405180910390a1600160046000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110539190611703565b925050819055506110f4565b7faf3d58f15b6499e624a75204661c56b7945306d56db3c61d63a8029edcc22c7c6001546040516110909190611bd5565b60405180910390a1600160046000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ec9190611703565b925050819055505b5b5b5b5b50565b60008142443360405160200161111393929190611c6c565b6040516020818303038152906040528051906020012060001c6111369190611cd8565b9050919050565b600080820361114f5760009050611165565b600182036111605760019050611165565b600290505b919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111a4578082015181840152602081019050611189565b60008484015250505050565b6000601f19601f8301169050919050565b60006111cc8261116a565b6111d68185611175565b93506111e6818560208601611186565b6111ef816111b0565b840191505092915050565b6000602082019050818103600083015261121481846111c1565b905092915050565b600080fd5b6003811061122e57600080fd5b50565b60008135905061124081611221565b92915050565b60006020828403121561125c5761125b61121c565b5b600061126a84828501611231565b91505092915050565b6000819050919050565b61128681611273565b82525050565b60006020820190506112a1600083018461127d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112d2826112a7565b9050919050565b6112e2816112c7565b81146112ed57600080fd5b50565b6000813590506112ff816112d9565b92915050565b60006020828403121561131b5761131a61121c565b5b6000611329848285016112f0565b91505092915050565b6000819050919050565b600061135761135261134d846112a7565b611332565b6112a7565b9050919050565b60006113698261133c565b9050919050565b600061137b8261135e565b9050919050565b61138b81611370565b82525050565b60006020820190506113a66000830184611382565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113f357607f821691505b602082108103611406576114056113ac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f506c617965724100000000000000000000000000000000000000000000000000600082015250565b6000611471600783611175565b915061147c8261143b565b602082019050919050565b611490816112c7565b82525050565b600381106114a7576114a661140c565b5b50565b60008190506114b882611496565b919050565b60006114c8826114aa565b9050919050565b6114d8816114bd565b82525050565b600060a0820190506114f3600083018761127d565b818103602083015261150481611464565b90506115136040830186611487565b61152060608301856114cf565b818103608083015261153281846111c1565b905095945050505050565b7f506c61796572422063616e6e6f74206265207468652073616d6520706c61796560008201527f7220617320706c61796572412c20706c656173652073656c656374206f70746960208201527f6f6e2077697468206120646966666572656e74206163636f756e742e00000000604082015250565b60006115bf605c83611175565b91506115ca8261153d565b606082019050919050565b600060208201905081810360008301526115ee816115b2565b9050919050565b7f506c617965724200000000000000000000000000000000000000000000000000600082015250565b600061162b600783611175565b9150611636826115f5565b602082019050919050565b600060a082019050611656600083018761127d565b81810360208301526116678161161e565b90506116766040830186611487565b61168360608301856114cf565b818103608083015261169581846111c1565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116da82611273565b91506116e583611273565b92508282039050818111156116fd576116fc6116a0565b5b92915050565b600061170e82611273565b915061171983611273565b9250828201905080821115611731576117306116a0565b5b92915050565b600061174282611273565b915061174d83611273565b925082820261175b81611273565b91508282048414831517611772576117716116a0565b5b5092915050565b600060408201905061178e6000830185611487565b61179b602083018461127d565b9392505050565b7f426f746820706c61796572732073656c65637465643a20000000000000000000815250565b600081905092915050565b60006117de8261116a565b6117e881856117c8565b93506117f8818560208601611186565b80840191505092915050565b7f2e20497427732061207469652100000000000000000000000000000000000000815250565b6000611835826117a2565b60178201915061184582846117d3565b915061185082611804565b600d8201915081905092915050565b6000604082019050611874600083018561127d565b818103602083015261188681846111c1565b90509392505050565b7f526f636b20736d61736865732073636973736f72732120506c6179657241207760008201527f696e210000000000000000000000000000000000000000000000000000000000602082015250565b60006118eb602383611175565b91506118f68261188f565b604082019050919050565b6000604082019050611916600083018461127d565b8181036020830152611927816118de565b905092915050565b7f506170657220636f7665727320726f636b2120506c61796572422077696e732e600082015250565b6000611965602083611175565b91506119708261192f565b602082019050919050565b6000604082019050611990600083018461127d565b81810360208301526119a181611958565b905092915050565b7f506170657220636f7665727320726f636b2120506c61796572412077696e2100600082015250565b60006119df601f83611175565b91506119ea826119a9565b602082019050919050565b6000604082019050611a0a600083018461127d565b8181036020830152611a1b816119d2565b905092915050565b7f53636973736f727320637574732070617065722120506c61796572422077696e60008201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a7f602283611175565b9150611a8a82611a23565b604082019050919050565b6000604082019050611aaa600083018461127d565b8181036020830152611abb81611a72565b905092915050565b7f53636973736f727320637574732070617065722120506c61796572412077696e60008201527f7321000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b1f602283611175565b9150611b2a82611ac3565b604082019050919050565b6000604082019050611b4a600083018461127d565b8181036020830152611b5b81611b12565b905092915050565b7f526f636b20736d61736865732073636973736f72732120506c6179657242207760008201527f696e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000611bbf602483611175565b9150611bca82611b63565b604082019050919050565b6000604082019050611bea600083018461127d565b8181036020830152611bfb81611bb2565b905092915050565b6000819050919050565b611c1e611c1982611273565b611c03565b82525050565b60008160601b9050919050565b6000611c3c82611c24565b9050919050565b6000611c4e82611c31565b9050919050565b611c66611c61826112c7565b611c43565b82525050565b6000611c788286611c0d565b602082019150611c888285611c0d565b602082019150611c988284611c55565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ce382611273565b9150611cee83611273565b925082611cfe57611cfd611ca9565b5b82820690509291505056fea26469706673582212204591d4594781a40790364db03e5542929bd4203157b5d444472b1eef3dd51fb664736f6c63430008110033";

type RockPaperScissorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RockPaperScissorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RockPaperScissors__factory extends ContractFactory {
  constructor(...args: RockPaperScissorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RockPaperScissors> {
    return super.deploy(_token, overrides || {}) as Promise<RockPaperScissors>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): RockPaperScissors {
    return super.attach(address) as RockPaperScissors;
  }
  override connect(signer: Signer): RockPaperScissors__factory {
    return super.connect(signer) as RockPaperScissors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RockPaperScissorsInterface {
    return new utils.Interface(_abi) as RockPaperScissorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RockPaperScissors {
    return new Contract(address, _abi, signerOrProvider) as RockPaperScissors;
  }
}

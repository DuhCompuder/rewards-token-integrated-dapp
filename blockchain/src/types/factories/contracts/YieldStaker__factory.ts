/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YieldStaker,
  YieldStakerInterface,
} from "../../contracts/YieldStaker";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGameToken",
        name: "_gameToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "YieldWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateYieldTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateYieldTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameToken",
    outputs: [
      {
        internalType: "contract IGameToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isStaking",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001291380380620012918339818101604052810190620000379190620000fd565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b6000620000c582620000a4565b9050919050565b620000d781620000b8565b8114620000e357600080fd5b50565b600081519050620000f781620000cc565b92915050565b6000602082840312156200011657620001156200007f565b5b60006200012684828501620000e6565b91505092915050565b611152806200013f6000396000f3fe6080604052600436106100955760003560e01c80636f49712b116100595780636f49712b1461018b578063980d6116146101c8578063c3dfdae614610205578063e507a8a414610230578063eedc966a146102475761009c565b806306872661146100a15780632e17de78146100de5780633a4b66f11461010757806345bc78ab146101115780636e1dc66e1461014e5761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610ca6565b610284565b6040516100d59190610cec565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610d33565b61032a565b005b61010f610678565b005b34801561011d57600080fd5b5061013860048036038101906101339190610ca6565b6108b8565b6040516101459190610cec565b60405180910390f35b34801561015a57600080fd5b5061017560048036038101906101709190610ca6565b6108d0565b6040516101829190610cec565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190610ca6565b6108e8565b6040516101bf9190610d7b565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190610ca6565b610908565b6040516101fc9190610cec565b60405180910390f35b34801561021157600080fd5b5061021a610967565b6040516102279190610df5565b60405180910390f35b34801561023c57600080fd5b5061024561098d565b005b34801561025357600080fd5b5061026e60048036038101906102699190610ca6565b610c2b565b60405161027b9190610cec565b60405180910390f35b600080670de0b6b3a764000061029984610908565b6102a39190610e3f565b90506000620151809050600081836102bb9190610eb0565b90506000670de0b6b3a7640000826000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103129190610e3f565b61031c9190610eb0565b905080945050505050919050565b600180156103765750806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610f3e565b60405180910390fd5b600061041533610284565b905042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600082905060009250806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104b29190610f5e565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516104df90610fc3565b60006040518083038185875af1925050503d806000811461051c576040519150601f19603f3d011682016040523d82523d6000602084013e610521565b606091505b505090508061052f57600080fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057e9190610fd8565b9250508190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610624576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd8560405161066a9190610cec565b60405180910390a250505050565b600034116106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290611058565b60405180910390fd5b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615150361077857600061071e33610284565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461076f9190610fd8565b92505081905550505b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c69190610fd8565b9250508190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a346040516108ae9190610cec565b60405180910390a2565b60006020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b6000804290506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261095b9190610f5e565b90508092505050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061099833610284565b905060008111806109e857506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e906110c4565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610b07576000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508082610b039190610fd8565b9150505b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a99b4f033836040518363ffffffff1660e01b8152600401610ba89291906110f3565b600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f92044e3943309ee5950e21bc7421d02c1df75f0df33c0d97c1143687b49a4c5782604051610c209190610cec565b60405180910390a250565b60036020528060005260406000206000915090505481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7382610c48565b9050919050565b610c8381610c68565b8114610c8e57600080fd5b50565b600081359050610ca081610c7a565b92915050565b600060208284031215610cbc57610cbb610c43565b5b6000610cca84828501610c91565b91505092915050565b6000819050919050565b610ce681610cd3565b82525050565b6000602082019050610d016000830184610cdd565b92915050565b610d1081610cd3565b8114610d1b57600080fd5b50565b600081359050610d2d81610d07565b92915050565b600060208284031215610d4957610d48610c43565b5b6000610d5784828501610d1e565b91505092915050565b60008115159050919050565b610d7581610d60565b82525050565b6000602082019050610d906000830184610d6c565b92915050565b6000819050919050565b6000610dbb610db6610db184610c48565b610d96565b610c48565b9050919050565b6000610dcd82610da0565b9050919050565b6000610ddf82610dc2565b9050919050565b610def81610dd4565b82525050565b6000602082019050610e0a6000830184610de6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e4a82610cd3565b9150610e5583610cd3565b9250828202610e6381610cd3565b91508282048414831517610e7a57610e79610e10565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ebb82610cd3565b9150610ec683610cd3565b925082610ed657610ed5610e81565b5b828204905092915050565b600082825260208201905092915050565b7f4e6f7468696e6720746f20756e7374616b650000000000000000000000000000600082015250565b6000610f28601283610ee1565b9150610f3382610ef2565b602082019050919050565b60006020820190508181036000830152610f5781610f1b565b9050919050565b6000610f6982610cd3565b9150610f7483610cd3565b9250828203905081811115610f8c57610f8b610e10565b5b92915050565b600081905092915050565b50565b6000610fad600083610f92565b9150610fb882610f9d565b600082019050919050565b6000610fce82610fa0565b9150819050919050565b6000610fe382610cd3565b9150610fee83610cd3565b925082820190508082111561100657611005610e10565b5b92915050565b7f596f752063616e6e6f74207374616b65207a65726f20746f6b656e7300000000600082015250565b6000611042601c83610ee1565b915061104d8261100c565b602082019050919050565b6000602082019050818103600083015261107181611035565b9050919050565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b60006110ae601383610ee1565b91506110b982611078565b602082019050919050565b600060208201905081810360008301526110dd816110a1565b9050919050565b6110ed81610c68565b82525050565b600060408201905061110860008301856110e4565b6111156020830184610cdd565b939250505056fea264697066735822122040990c19330c25aa248cb7534b7458a4747d09021693f9b2ba4cfb5164d2627b64736f6c63430008110033";

type YieldStakerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldStakerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldStaker__factory extends ContractFactory {
  constructor(...args: YieldStakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldStaker> {
    return super.deploy(_gameToken, overrides || {}) as Promise<YieldStaker>;
  }
  override getDeployTransaction(
    _gameToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameToken, overrides || {});
  }
  override attach(address: string): YieldStaker {
    return super.attach(address) as YieldStaker;
  }
  override connect(signer: Signer): YieldStaker__factory {
    return super.connect(signer) as YieldStaker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldStakerInterface {
    return new utils.Interface(_abi) as YieldStakerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldStaker {
    return new Contract(address, _abi, signerOrProvider) as YieldStaker;
  }
}
